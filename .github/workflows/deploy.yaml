name: Deploy App

on:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Convert repository owner to lowercase
        run: echo "REPO_OWNER_LC=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_ENV

      - name: Login to GitHub Container Registry (GHCR)
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image to GHCR
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ env.REPO_OWNER_LC }}/youtube-transcript:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Decode and set up KUBECONFIG
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        run: |
          echo "$KUBE_CONFIG_DATA" | base64 -d > kubeconfig.yaml
          export KUBECONFIG=$(pwd)/kubeconfig.yaml
      
      - name: Update Deployment annotation
        run: |
          sed -i "s#kubernetes.io/change-cause:.*#kubernetes.io/change-cause: 'Update $(date +"%Y-%m-%d %H:%M:%S")'#" k8s/deployment.yaml
    
      - name: Ensure Namespace Exists
        run: |
          kubectl get namespace youtube-transcript --kubeconfig=$(pwd)/kubeconfig.yaml || \
          kubectl create namespace youtube-transcript --kubeconfig=$(pwd)/kubeconfig.yaml
    
      - name: Deploy to K3s
        run: |          
          kubectl --kubeconfig=$(pwd)/kubeconfig.yaml apply -f k8s/namespace.yaml
          kubectl --kubeconfig=$(pwd)/kubeconfig.yaml apply -f k8s/redirect-middleware.yaml
          kubectl --kubeconfig=$(pwd)/kubeconfig.yaml apply -f k8s/deployment.yaml
          kubectl --kubeconfig=$(pwd)/kubeconfig.yaml apply -f k8s/service.yaml
          kubectl --kubeconfig=$(pwd)/kubeconfig.yaml apply -f k8s/ingress.yaml

      
      - name: Force Pod Restart
        run: |
          kubectl rollout restart deployment/youtube-transcript -n youtube-transcript --kubeconfig=$(pwd)/kubeconfig.yaml
